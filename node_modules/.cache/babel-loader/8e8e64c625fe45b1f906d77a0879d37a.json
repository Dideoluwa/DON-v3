{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Darasimi files/Online-Mini-Store-REST-API-x-Reactjs-/frontend/src/Components/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nlet cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let updatedTotalAmount = state.totalAmount + action.item.price;\n  }\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  let [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  let addItemToCartHandler = item => {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  let removeItemFromCartHandler = id => {\n    dispatchCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","CartProvider","props","cartState","dispatchCart","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["/Users/mac/Desktop/Darasimi files/Online-Mini-Store-REST-API-x-Reactjs-/frontend/src/Components/Store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react'\nimport CartContext from './cart-context'\n\nlet defaultCartState = {\n    items: [],\n    totalAmount: 0,\n}\n\nlet cartReducer = (state , action) =>{\n   if (action.type === 'ADD'){\n       let updatedTotalAmount = state.totalAmount + action.item.price\n   }\n}\n\nfunction CartProvider(props) {\n    let [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState)\n\n\n    let addItemToCartHandler = (item) => {\n        dispatchCart({\n            type: 'ADD',\n            item: item\n        })\n    }\n\n    let removeItemFromCartHandler = (id) => {\n        dispatchCart({\n            type: 'REMOVE',\n            id: id\n        })\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAIC,gBAAgB,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,WAAW,EAAE;AAFM,CAAvB;;AAKA,IAAIC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAmB;EAClC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;IACtB,IAAIC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAzD;EACH;AACH,CAJD;;AAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EACzB,IAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA1C;;EAGA,IAAIc,oBAAoB,GAAIN,IAAD,IAAU;IACjCK,YAAY,CAAC;MACTP,IAAI,EAAE,KADG;MAETE,IAAI,EAAEA;IAFG,CAAD,CAAZ;EAIH,CALD;;EAOA,IAAIO,yBAAyB,GAAIC,EAAD,IAAQ;IACpCH,YAAY,CAAC;MACTP,IAAI,EAAE,QADG;MAETU,EAAE,EAAEA;IAFK,CAAD,CAAZ;EAIH,CALD;;EAOA,MAAMC,WAAW,GAAG;IAChBhB,KAAK,EAAEW,SAAS,CAACX,KADD;IAEhBC,WAAW,EAAEU,SAAS,CAACV,WAFP;IAGhBgB,OAAO,EAAEJ,oBAHO;IAIhBK,UAAU,EAAEJ;EAJI,CAApB;EAMA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,WAA7B;IAAA,UACKN,KAAK,CAACS;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA7BQV,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}