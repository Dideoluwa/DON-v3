{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Darasimi files/Online-Mini-Store-REST-API-x-Reactjs-/frontend/src/Components/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CartContext from './cart-context';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nlet cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    let existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    let existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    } // localStorage.setItem('cartItems', JSON.stringify(state.items))\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    let existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    let existingItem = state.items[existingCartItemIndex];\n    let updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      let updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } // localStorage.setItem('cartItems', JSON.stringify(state.items))\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  let [cartState, dispatchCart] = useLocalStorage(cartReducer, defaultCartState);\n\n  let addItemToCartHandler = item => {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  let removeItemFromCartHandler = id => {\n    dispatchCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"NBkdolqztjf/D2yEowS+BsTH1Ws=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","CartContext","useLocalStorage","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","existingItem","filter","CartProvider","props","cartState","dispatchCart","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/mac/Desktop/Darasimi files/Online-Mini-Store-REST-API-x-Reactjs-/frontend/src/Components/Store/CartProvider.js"],"sourcesContent":["import React from 'react'\nimport CartContext from './cart-context'\nimport useLocalStorage from '../Hooks/useLocalStorage'\n\nlet defaultCartState = {\n    items:[],\n    totalAmount: 0,\n}\n\nlet cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        let updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        let existingCartItemIndex = state.items.findIndex(\n            item => item.id === action.item.id\n        )\n        let existingCartItem = state.items[existingCartItemIndex]\n        let updatedItem\n        let updatedItems\n\n        if (existingCartItem) {\n            updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            }\n            updatedItems = [...state.items]\n            updatedItems[existingCartItemIndex] = updatedItem\n        } else {\n            updatedItem = { ...action.item }\n            updatedItems = state.items.concat(action.item);\n        }\n        // localStorage.setItem('cartItems', JSON.stringify(state.items))\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        } \n    }\n    if (action.type === 'REMOVE') {\n        let existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.id\n        )\n        let existingItem = state.items[existingCartItemIndex]\n        let updatedTotalAmount = state.totalAmount - existingItem.price\n        let updatedItems\n        if (existingItem.amount === 1) {\n            updatedItems = state.items.filter(item => item.id !== action.id);\n        } else {\n            let updatedItem = {\n                ...existingItem,\n                amount: existingItem.amount - 1\n            }\n            updatedItems = [...state.items]\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        // localStorage.setItem('cartItems', JSON.stringify(state.items))\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    return defaultCartState;\n}\n\nfunction CartProvider(props) {\n    let [cartState, dispatchCart] = useLocalStorage(cartReducer, defaultCartState)\n\n\n    let addItemToCartHandler = (item) => {\n        dispatchCart({\n            type: 'ADD',\n            item: item\n        })\n    }\n\n    let removeItemFromCartHandler = (id) => {\n        dispatchCart({\n            type: 'REMOVE',\n            id: id\n        })\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider"],"mappings":"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"},"metadata":{},"sourceType":"module"}